{
  "intro": {
    "title": "üöÄ Mindset & Tech Adventure",
    "description": "Develop both your mindset and technical skills through hilarious and interactive challenges",
    "subtitle": "Train your brain and your code skills while laughing through the pain"
  },
  "phases": [
    {
      "id": "mindset_basics",
      "title": "Mindset Basics",
      "icon": "üß†",
      "intro": "Test your understanding of growth vs. fixed mindset principles with realistic and funny situations.",
      "video_url": "https://www.example.com/videos/mindset.mp4",
      "description": "Dive into the foundations of a growth mindset: how to embrace challenges, reframe setbacks, and view effort as a path to mastery.",
      "scenario": "Your app just crashed minutes before a demo. Panic? Blame the intern? Or... channel your inner growth warrior?",
      "questions": [
        {
          "question": "How would you reframe: \"I'm not good at this\"?",
          "options": {
            "A": "I'm not good yet ‚Äî but I can learn",
            "B": "That's why I avoid it",
            "C": "I'll ask someone to do it for me",
            "D": "Maybe I'll be a poet instead"
          },
          "correct": "A",
          "explanation": "Growth mindset is reflected in: 'I'm not good yet ‚Äî but I can learn.'"
        },
        {
          "question": "Your code fails 3 times in a row. You think:",
          "options": {
            "A": "Each failure teaches me what doesn't work",
            "B": "I'm just not cut out for coding",
            "C": "The computer clearly hates me",
            "D": "Time to switch careers"
          },
          "correct": "A",
          "explanation": "Failures are stepping stones, not stop signs."
        },
        {
          "question": "A colleague solves a problem faster than you. You:",
          "options": {
            "A": "Ask them to explain their approach",
            "B": "Feel inadequate and give up",
            "C": "Pretend you knew the answer all along",
            "D": "Complain the problem was unfair"
          },
          "correct": "A",
          "explanation": "Learning from others accelerates growth."
        },
        {
          "question": "When facing a difficult bug, you:",
          "options": {
            "A": "Break it down into smaller testable parts",
            "B": "Assume it's someone else's fault",
            "C": "Wait for someone else to fix it",
            "D": "Blame the programming language"
          },
          "correct": "A",
          "explanation": "Systematic problem-solving beats frustration."
        },
        {
          "question": "After negative feedback on your code, you:",
          "options": {
            "A": "Identify specific areas to improve",
            "B": "Assume the reviewer is being mean",
            "C": "Ignore the feedback completely",
            "D": "Secretly critique their code in revenge"
          },
          "correct": "A",
          "explanation": "Constructive criticism is fuel for growth."
        },
        {
          "question": "When stuck on a problem for hours, you:",
          "options": {
            "A": "Take a break and return with fresh eyes",
            "B": "Keep banging your head against it",
            "C": "Pretend the problem doesn't exist",
            "D": "Declare the task impossible"
          },
          "correct": "A",
          "explanation": "Stepping away often provides new perspectives."
        },
        {
          "question": "A new technology is required for a project. You:",
          "options": {
            "A": "Dive into docs and build a small prototype",
            "B": "Say you already know it (then panic)",
            "C": "Avoid the task until reassigned",
            "D": "Claim the tech is just a fad"
          },
          "correct": "A",
          "explanation": "Comfort with learning beats fake expertise."
        },
        {
          "question": "Your pull request gets rejected. You:",
          "options": {
            "A": "Request specific feedback to improve",
            "B": "Take it personally and pout",
            "C": "Sneak your code into production",
            "D": "Badmouth the reviewer to coworkers"
          },
          "correct": "A",
          "explanation": "Code reviews are learning opportunities."
        },
        {
          "question": "When pair programming with someone more skilled, you:",
          "options": {
            "A": "Ask questions about their approach",
            "B": "Let them do all the work",
            "C": "Pretend to understand when you don't",
            "D": "Secretly compete against them"
          },
          "correct": "A",
          "explanation": "Collaboration beats competition for growth."
        },
        {
          "question": "After solving a tough problem, you:",
          "options": {
            "A": "Document the solution for future reference",
            "B": "Quickly move to the next task",
            "C": "Brag about how easy it was",
            "D": "Hope you never see it again"
          },
          "correct": "A",
          "explanation": "Reflection solidifies learning."
        }
      ]
    },
    {
      "id": "web_tech",
      "title": "Web Technologies",
      "icon": "üíª",
      "intro": "Flex your frontend and backend basics",
      "video_url": "https://www.example.com/videos/web_tech.mp4",
      "description": "You'll cover HTML, CSS, JS, frameworks, and how to avoid breaking everything with one div.",
      "scenario": "You deployed the homepage. It works on your machine. On everyone else's? A blank screen of doom.",
      "questions": [
        {
          "question": "Your CSS isn't applying. First you:",
          "options": {
            "A": "Check browser dev tools for errors",
            "B": "Add !important to everything",
            "C": "Blame the framework",
            "D": "Refresh repeatedly while praying"
          },
          "correct": "A",
          "explanation": "Dev tools reveal CSS application issues."
        },
        {
          "question": "JavaScript throws 'undefined is not a function'. You:",
          "options": {
            "A": "Check variable scope and initialization",
            "B": "Wrap everything in try/catch",
            "C": "Restart your computer",
            "D": "Switch to jQuery"
          },
          "correct": "A",
          "explanation": "This usually indicates calling a non-existent method."
        },
        {
          "question": "The page renders differently in Firefox. You:",
          "options": {
            "A": "Check for unsupported features on caniuse.com",
            "B": "Tell users to switch browsers",
            "C": "Blame Mozilla",
            "D": "Add browser-specific hacks"
          },
          "correct": "A",
          "explanation": "Cross-browser testing prevents surprises."
        },
        {
          "question": "Your React component won't update. You:",
          "options": {
            "A": "Check state/props with React DevTools",
            "B": "ForceUpdate() everywhere",
            "C": "Rewrite in vanilla JS",
            "D": "Blame hooks"
          },
          "correct": "A",
          "explanation": "State management issues often cause update problems."
        },
        {
          "question": "The API returns 500 errors. You:",
          "options": {
            "A": "Check network tab for response details",
            "B": "Refresh until it works",
            "C": "Blame the backend team",
            "D": "Mock the data and pretend it's fine"
          },
          "correct": "A",
          "explanation": "Server errors require examining the actual response."
        },
        {
          "question": "Your flexbox layout breaks in IE11. You:",
          "options": {
            "A": "Research known IE flexbox bugs",
            "B": "Tell clients to upgrade",
            "C": "Use floats instead",
            "D": "Add '-ms-' prefixes randomly"
          },
          "correct": "A",
          "explanation": "IE has specific flexbox implementation quirks."
        },
        {
          "question": "The page flashes unstyled content. You:",
          "options": {
            "A": "Implement critical CSS loading",
            "B": "Add a loading spinner",
            "C": "Make the background white",
            "D": "Ignore it - it's fast enough"
          },
          "correct": "A",
          "explanation": "FOUC indicates CSS loading timing issues."
        },
        {
          "question": "Your media queries aren't working. You:",
          "options": {
            "A": "Check viewport meta tag",
            "B": "Use JavaScript resize handlers",
            "C": "Make everything mobile-first",
            "D": "Blame the device manufacturer"
          },
          "correct": "A",
          "explanation": "Missing viewport tag breaks responsive design."
        },
        {
          "question": "The JavaScript bundle is too large. You:",
          "options": {
            "A": "Analyze with webpack-bundle-analyzer",
            "B": "Tell users to get better internet",
            "C": "Move everything to CDN",
            "D": "Blame node_modules"
          },
          "correct": "A",
          "explanation": "Bundle analysis reveals optimization opportunities."
        },
        {
          "question": "The CSS animations are janky. You:",
          "options": {
            "A": "Check will-change and transform properties",
            "B": "Reduce animation duration",
            "C": "Use JavaScript animations instead",
            "D": "Blame the GPU"
          },
          "correct": "A",
          "explanation": "Hardware acceleration improves animation performance."
        }
      ]
    },
    {
      "id": "scraping_detective_agency",
      "title": "üïµÔ∏è Scraper's Detective Agency",
      "icon": "üïµÔ∏è",
      "intro": "Scrape responsibly (and stylishly)",
      "video_url": "https://www.example.com/videos/scraping_detective.mp4",
      "description": "Learn to crawl data without being crawled by guilt or firewalls.",
      "scenario": "Your scraper got blocked. Do you switch IPs, add delay, or send the website cookies?",
      "questions": [
        {
          "question": "You get HTTP 429 (Too Many Requests). You:",
          "options": {
            "A": "Implement exponential backoff",
            "B": "Switch to a VPN",
            "C": "Scrape during off-hours",
            "D": "Pretend to be Googlebot"
          },
          "correct": "A",
          "explanation": "Backoff shows respect for server resources."
        },
        {
          "question": "The site uses Cloudflare protection. You:",
          "options": {
            "A": "Analyze browser fingerprint requirements",
            "B": "Use headless Chrome with stealth plugins",
            "C": "Find an unofficial API",
            "D": "Scrape from Wayback Machine"
          },
          "correct": "A",
          "explanation": "Understanding protections helps craft ethical solutions."
        },
        {
          "question": "CAPTCHAs appear after 5 requests. You:",
          "options": {
            "A": "Implement human-like mouse movements",
            "B": "Use a CAPTCHA solving service",
            "C": "Rotate user agents aggressively",
            "D": "Train a neural network to solve them"
          },
          "correct": "A",
          "explanation": "Human-like behavior reduces bot detection."
        },
        {
          "question": "Data loads via JavaScript. You:",
          "options": {
            "A": "Use Puppeteer to render the page",
            "B": "Find XHR endpoints in dev tools",
            "C": "Ask the site for an API",
            "D": "Manually copy the data"
          },
          "correct": "A",
          "explanation": "Headless browsers execute JS like real users."
        },
        {
          "question": "The site changes its HTML weekly. You:",
          "options": {
            "A": "Build resilient selectors using data attributes",
            "B": "Complain to the webmaster",
            "C": "Rewrite scrapers constantly",
            "D": "Use visual regression testing"
          },
          "correct": "A",
          "explanation": "Stable selectors prevent frequent breakage."
        },
        {
          "question": "You need to scrape 100,000 pages. You:",
          "options": {
            "A": "Implement distributed queueing with rate limits",
            "B": "Run 100 Chrome instances",
            "C": "Rent a botnet",
            "D": "Do it serially over weeks"
          },
          "correct": "A",
          "explanation": "Distributed systems require careful coordination."
        },
        {
          "question": "The site blocks your IP range. You:",
          "options": {
            "A": "Use residential proxies sparingly",
            "B": "Switch to mobile data",
            "C": "Scrape from a coffee shop",
            "D": "Threaten legal action"
          },
          "correct": "A",
          "explanation": "Residential IPs appear as regular users."
        },
        {
          "question": "Data appears after button clicks. You:",
          "options": {
            "A": "Programmatically trigger DOM events",
            "B": "Use image recognition to click",
            "C": "Simulate tab key presses",
            "D": "Outsource to Mechanical Turk"
          },
          "correct": "A",
          "explanation": "Proper event triggering mimics user behavior."
        },
        {
          "question": "The site requires login. You:",
          "options": {
            "A": "Check if a public API exists first",
            "B": "Create a fake account",
            "C": "Brute force common credentials",
            "D": "Hack the mainframe"
          },
          "correct": "A",
          "explanation": "Always prefer authorized access methods."
        },
        {
          "question": "You accidentally DDoS a small site. You:",
          "options": {
            "A": "Immediately stop and apologize",
            "B": "Blame their weak servers",
            "C": "Switch to scraping Google Cache",
            "D": "Donate to their hosting"
          },
          "correct": "A",
          "explanation": "Ethical scraping includes damage control."
        }
      ]
    },
    {
      "id": "adapting_to_change",
      "title": "Change is Inevitable. So is Crying.",
      "icon": "üò≠",
      "intro": "Learn to survive shifting requirements and emotional damage",
      "video_url": "https://www.example.com/videos/change_happens.mp4",
      "description": "Nothing is final. Clients change their minds. PMs forget what they said. You adapt.",
      "scenario": "You just finished the feature. The PM says, 'Actually, we decided to pivot.'",
      "questions": [
        {
          "question": "The client changes requirements mid-sprint. You:",
          "options": {
            "A": "Document the change and estimate impact",
            "B": "Implement both versions secretly",
            "C": "Tell them it's too late",
            "D": "Quit on the spot"
          },
          "correct": "A",
          "explanation": "Professionalism means managing change properly."
        },
        {
          "question": "The design changes after you coded it. You:",
          "options": {
            "A": "Ask what problem the new design solves",
            "B": "Push back with technical constraints",
            "C": "Implement it with obvious bugs",
            "D": "Email the CEO about wasted time"
          },
          "correct": "A",
          "explanation": "Understanding the why behind changes helps adaptation."
        },
        {
          "question": "Your tech stack gets replaced. You:",
          "options": {
            "A": "Identify transferable concepts between stacks",
            "B": "Sabotage the new stack's adoption",
            "C": "Update your resume immediately",
            "D": "Claim expertise in the new stack"
          },
          "correct": "A",
          "explanation": "Core programming concepts transcend specific technologies."
        },
        {
          "question": "The deadline moves up two weeks. You:",
          "options": {
            "A": "Identify must-have vs nice-to-have features",
            "B": "Work 80-hour weeks",
            "C": "Lower quality standards silently",
            "D": "Blame the sales team"
          },
          "correct": "A",
          "explanation": "Scope negotiation is a key professional skill."
        },
        {
          "question": "Your project gets cancelled after 6 months. You:",
          "options": {
            "A": "Document lessons learned for next time",
            "B": "Delete all your code in protest",
            "C": "Badmouth leadership at happy hour",
            "D": "Take a long 'mental health' break"
          },
          "correct": "A",
          "explanation": "Every project teaches valuable lessons."
        },
        {
          "question": "Your role changes to include DevOps. You:",
          "options": {
            "A": "Learn the basics of CI/CD pipelines",
            "B": "Claim you're allergic to terminals",
            "C": "Break production immediately",
            "D": "Demand a title change and raise"
          },
          "correct": "A",
          "explanation": "Modern developers benefit from ops knowledge."
        },
        {
          "question": "The company pivots to blockchain. You:",
          "options": {
            "A": "Evaluate if the use case makes sense",
            "B": "Add 'blockchain expert' to LinkedIn",
            "C": "Invest in crypto with company funds",
            "D": "Explain why this is a terrible idea"
          },
          "correct": "A",
          "explanation": "Critical thinking beats blind adoption."
        },
        {
          "question": "Your manager leaves abruptly. You:",
          "options": {
            "A": "Document current priorities and open questions",
            "B": "Take advantage of the leadership vacuum",
            "C": "Panic about who will approve your PTO",
            "D": "Also start looking for new jobs"
          },
          "correct": "A",
          "explanation": "Professionalism means maintaining continuity."
        },
        {
          "question": "The office switches to open seating. You:",
          "options": {
            "A": "Invest in good headphones",
            "B": "Claim the best spot permanently",
            "C": "Work from home indefinitely",
            "D": "Start a petition against it"
          },
          "correct": "A",
          "explanation": "Adapting your environment is more effective than resisting."
        },
        {
          "question": "Your favorite tool gets deprecated. You:",
          "options": {
            "A": "Learn its replacement's equivalent features",
            "B": "Fork the project and maintain it yourself",
            "C": "Stockpile old versions",
            "D": "Write a bitter blog post"
          },
          "correct": "A",
          "explanation": "Tech evolves - flexibility is key."
        }
      ]
    },
    {
      "id": "technical_problem_solving",
      "title": "Technical Problem Solving",
      "icon": "üîç",
      "intro": "Get serious about fixing bugs (but with memes)",
      "video_url": "https://www.example.com/videos/fix_bugs.mp4",
      "description": "Bug fixing is like therapy: dig deep, be patient, and sometimes it's your fault.",
      "scenario": "500 errors all over production. You have no logs. Do you panic or debug like a ninja?",
      "questions": [
        {
          "question": "The bug only occurs in production. You:",
          "options": {
            "A": "Check for environment configuration differences",
            "B": "Say it works on your machine",
            "C": "Blame the ops team",
            "D": "Add more logging and wait"
          },
          "correct": "A",
          "explanation": "Environment discrepancies often cause production issues."
        },
        {
          "question": "The error message is 'Something went wrong'. You:",
          "options": {
            "A": "Check server logs for the actual error",
            "B": "Google the exact message",
            "C": "Restart everything",
            "D": "Blame the frontend"
          },
          "correct": "A",
          "explanation": "Generic errors hide specific problems in logs."
        },
        {
          "question": "The bug is intermittent. You:",
          "options": {
            "A": "Look for race conditions or timing issues",
            "B": "Pretend you can't reproduce it",
            "C": "Add random timeouts everywhere",
            "D": "Blame cosmic rays"
          },
          "correct": "A",
          "explanation": "Intermittent bugs often involve timing or state."
        },
        {
          "question": "The stack trace points to library code. You:",
          "options": {
            "A": "Check your inputs to the library",
            "B": "File a bug report with the library",
            "C": "Fork and fix the library",
            "D": "Switch libraries immediately"
          },
          "correct": "A",
          "explanation": "Most library errors stem from incorrect usage."
        },
        {
          "question": "The bug appears after recent changes. You:",
          "options": {
            "A": "Use git bisect to find the culprit commit",
            "B": "Revert your last merge",
            "C": "Blame the newest team member",
            "D": "Claim it was always broken"
          },
          "correct": "A",
          "explanation": "Methodical investigation beats guesswork."
        },
        {
          "question": "The database query is slow. You:",
          "options": {
            "A": "EXPLAIN the query plan",
            "B": "Add more indexes randomly",
            "C": "Upgrade the database server",
            "D": "Cache everything in memory"
          },
          "correct": "A",
          "explanation": "Query analysis reveals optimization opportunities."
        },
        {
          "question": "The UI freezes randomly. You:",
          "options": {
            "A": "Profile JavaScript performance",
            "B": "Add a loading spinner",
            "C": "Reduce the frame rate",
            "D": "Blame the user's old computer"
          },
          "correct": "A",
          "explanation": "Performance profiling identifies bottlenecks."
        },
        {
          "question": "The API returns inconsistent data. You:",
          "options": {
            "A": "Check for caching layers or CDN issues",
            "B": "Call the API repeatedly until it works",
            "C": "Build your own data store",
            "D": "Blame the full moon"
          },
          "correct": "A",
          "explanation": "Caching often causes data consistency problems."
        },
        {
          "question": "The mobile app crashes on launch. You:",
          "options": {
            "A": "Check device-specific error reports",
            "B": "Tell users to reinstall",
            "C": "Blame the app store",
            "D": "Push a hotfix without testing"
          },
          "correct": "A",
          "explanation": "Crash analytics reveal device-specific issues."
        },
        {
          "question": "The tests pass but production breaks. You:",
          "options": {
            "A": "Compare test vs production data sets",
            "B": "Delete the tests",
            "C": "Mock everything in tests",
            "D": "Blame QA"
          },
          "correct": "A",
          "explanation": "Test environments should mirror production."
        }
      ]
    },
    {
      "id": "standup_circus",
      "title": "The Daily Standup Circus",
      "icon": "üé™",
      "intro": "Learn to sound productive before coffee",
      "video_url": "https://www.example.com/videos/standup.mp4",
      "description": "Standups are performance art. Learn how to summarize chaos in 30 seconds.",
      "scenario": "You forgot what you did yesterday. Do you admit it, invent tasks, or say 'blocked by dependencies'?",
      "questions": [
        {
          "question": "You actually did nothing yesterday. You:",
          "options": {
            "A": "Admit you were stuck and need help",
            "B": "List minor admin tasks as accomplishments",
            "C": "Blame missing requirements",
            "D": "Fake a family emergency"
          },
          "correct": "A",
          "explanation": "Honesty builds trust and gets you help faster."
        },
        {
          "question": "The overachiever finishes early. You:",
          "options": {
            "A": "Ask to pair on their next task",
            "B": "Claim their work was easier",
            "C": "Slow your own pace to match",
            "D": "Sabotage their keyboard"
          },
          "correct": "A",
          "explanation": "Collaboration beats unhealthy competition."
        },
        {
          "question": "You're stuck on a problem. You:",
          "options": {
            "A": "Describe exactly where you're blocked",
            "B": "Say you're 'still working on it'",
            "C": "Blame missing documentation",
            "D": "Claim progress is 'almost done'"
          },
          "correct": "A",
          "explanation": "Specific problems get specific solutions."
        },
        {
          "question": "The PM asks for an ETA. You:",
          "options": {
            "A": "Give a range based on known unknowns",
            "B": "Promise it by EOD no matter what",
            "C": "Say 'soon' and avoid eye contact",
            "D": "Quote Hofstadter's Law humorously"
          },
          "correct": "A",
          "explanation": "Realistic estimates manage expectations."
        },
        {
          "question": "Someone takes credit for your work. You:",
          "options": {
            "A": "Clarify your contribution professionally",
            "B": "Call them out aggressively",
            "C": "Undermine their future work",
            "D": "Complain to HR immediately"
          },
          "correct": "A",
          "explanation": "Professional correction maintains team harmony."
        },
        {
          "question": "The standup runs over time. You:",
          "options": {
            "A": "Suggest tabling discussions for after",
            "B": "Monopolize with your own issues",
            "C": "Sigh loudly and check your phone",
            "D": "Start eating lunch conspicuously"
          },
          "correct": "A",
          "explanation": "Respecting time boundaries helps everyone."
        },
        {
          "question": "You disagree with the approach. You:",
          "options": {
            "A": "Suggest alternatives with rationale",
            "B": "Passively resist implementing it",
            "C": "Complain to other team members",
            "D": "Declare the project doomed"
          },
          "correct": "A",
          "explanation": "Constructive dissent improves outcomes."
        },
        {
          "question": "The remote team can't hear you. You:",
          "options": {
            "A": "Type your update in chat",
            "B": "Shout and gesture wildly",
            "C": "Blame their internet",
            "D": "Pretend you're frozen"
          },
          "correct": "A",
          "explanation": "Adapt communication methods as needed."
        },
        {
          "question": "You're waiting on another team. You:",
          "options": {
            "A": "Document what you need specifically",
            "B": "Vaguely say you're 'blocked'",
            "C": "Blame them for all delays",
            "D": "Start working on something else"
          },
          "correct": "A",
          "explanation": "Clear dependencies get resolved faster."
        },
        {
          "question": "The standup is pointless. You:",
          "options": {
            "A": "Suggest improvements to the format",
            "B": "Zone out completely",
            "C": "Hold side conversations",
            "D": "Skip and claim you forgot"
          },
          "correct": "A",
          "explanation": "Continuous improvement applies to meetings too."
        }
      ]
    },
    {
      "id": "bug_bounty_showdown",
      "title": "The Bug Bounty Showdown",
      "icon": "üí∞",
      "intro": "Hunt bugs like a bounty hunter with caffeine issues",
      "video_url": "https://www.example.com/videos/bug_hunt.mp4",
      "description": "Every bug you find might be worth $500‚Äîor your weekend.",
      "scenario": "Your teammate finds 10 bugs before you even wake up. Will you catch up or sabotage their Wi-Fi?",
      "questions": [
        {
          "question": "You find an XSS vulnerability. First you:",
          "options": {
            "A": "Document reproduction steps clearly",
            "B": "Post a screenshot on Twitter",
            "C": "Demonstrate it to coworkers dramatically",
            "D": "Demand immediate payment"
          },
          "correct": "A",
          "explanation": "Clear reports get fixed (and paid) faster."
        },
        {
          "question": "You discover sensitive data exposure. You:",
          "options": {
            "A": "Report it through proper channels",
            "B": "Check if your friends' data is there",
            "C": "Write a blog post about it",
            "D": "Leave an anonymous note"
          },
          "correct": "A",
          "explanation": "Ethical disclosure protects users."
        },
        {
          "question": "The company ignores your report. You:",
          "options": {
            "A": "Follow up politely with more details",
            "B": "Threaten public disclosure",
            "C": "Exploit it to prove your point",
            "D": "Sell it on the dark web"
          },
          "correct": "A",
          "explanation": "Responsible disclosure requires patience."
        },
        {
          "question": "You find a bug in open source software. You:",
          "options": {
            "A": "Submit a PR with the fix",
            "B": "File an issue vaguely",
            "C": "Fork the project",
            "D": "Demand maintainer status"
          },
          "correct": "A",
          "explanation": "Open source thrives on contributions."
        },
        {
          "question": "The bounty payment is delayed. You:",
          "options": {
            "A": "Follow up with accounting politely",
            "B": "Spam their support tickets",
            "C": "Threaten legal action",
            "D": "Find more bugs to leverage"
          },
          "correct": "A",
          "explanation": "Professionalism pays off long-term."
        },
        {
          "question": "You find a bug in a competitor's product. You:",
          "options": {
            "A": "Report it to them directly",
            "B": "Tell your CEO first",
            "C": "Leak it to press anonymously",
            "D": "Use it for competitive advantage"
          },
          "correct": "A",
          "explanation": "Ethics don't stop at company boundaries."
        },
        {
          "question": "Your bug report gets rejected. You:",
          "options": {
            "A": "Request clarification on the decision",
            "B": "Publicly shame their security",
            "C": "Find a more severe variant",
            "D": "Give up on bug bounties"
          },
          "correct": "A",
          "explanation": "Understanding criteria improves future reports."
        },
        {
          "question": "You accidentally access customer data. You:",
          "options": {
            "A": "Report the access vector immediately",
            "B": "Look up celebrities",
            "C": "Download 'just in case'",
            "D": "Leave without saying anything"
          },
          "correct": "A",
          "explanation": "Ethical hackers respect privacy boundaries."
        },
        {
          "question": "Someone else reports 'your' bug. You:",
          "options": {
            "A": "Check if your report arrived first",
            "B": "Accuse them of stealing",
            "C": "Undermine their reputation",
            "D": "DDOS their website"
          },
          "correct": "A",
          "explanation": "Timestamped reports determine credit."
        },
        {
          "question": "You find a zero-day in production. You:",
          "options": {
            "A": "Follow the company's disclosure policy",
            "B": "Demonstrate it at a conference",
            "C": "Sell it to the highest bidder",
            "D": "Fix it yourself and deploy"
          },
          "correct": "A",
          "explanation": "Responsible disclosure prevents harm."
        }
      ]
    },
    {
      "id": "database_diner",
      "title": "Database Diner: Order Up!",
      "icon": "üçΩÔ∏è",
      "intro": "Order, normalize, and serve your data hot",
      "video_url": "https://www.example.com/videos/database_diner.mp4",
      "description": "Design schemas like a gourmet chef: organized, delicious, and no duplicates allowed.",
      "scenario": "Your client's data is a spreadsheet with 800 columns. You must normalize it before it normalizes you.",
      "questions": [
        {
          "question": "Your queries are slow. First you:",
          "options": {
            "A": "EXPLAIN ANALYZE the query plan",
            "B": "Add indexes randomly",
            "C": "Upgrade the database server",
            "D": "Blame the ORM"
          },
          "correct": "A",
          "explanation": "Query analysis reveals optimization opportunities."
        },
        {
          "question": "You notice duplicate data. You:",
          "options": {
            "A": "Normalize the schema properly",
            "B": "Add UNIQUE constraints",
            "C": "Clean it in the application layer",
            "D": "Claim it's 'denormalized for performance'"
          },
          "correct": "A",
          "explanation": "Normalization prevents data anomalies."
        },
        {
          "question": "The joins are expensive. You:",
          "options": {
            "A": "Check if denormalization makes sense",
            "B": "Precompute all possible joins",
            "C": "Move joins to application code",
            "D": "Switch to NoSQL immediately"
          },
          "correct": "A",
          "explanation": "Strategic denormalization can optimize reads."
        },
        {
          "question": "Migrations take hours. You:",
          "options": {
            "A": "Implement online schema change patterns",
            "B": "Run them overnight",
            "C": "Blame the DBA team",
            "D": "Stop making schema changes"
          },
          "correct": "A",
          "explanation": "Modern databases support live migrations."
        },
        {
          "question": "NULL values cause issues. You:",
          "options": {
            "A": "Evaluate if NULL is semantically correct",
            "B": "Replace all NULLs with empty strings",
            "C": "Add IS NOT NULL constraints everywhere",
            "D": "Blame Codd for inventing NULL"
          },
          "correct": "A",
          "explanation": "NULL has specific semantic meaning."
        },
        {
          "question": "The backup failed. You:",
          "options": {
            "A": "Verify recovery from last good backup",
            "B": "Pretend it didn't happen",
            "C": "Blame the storage team",
            "D": "Declare backups unnecessary"
          },
          "correct": "A",
          "explanation": "Backups only count if they can be restored."
        }
      ]
    }
  ]
}
